#!/usr/bin/with-contenv bash

#======================================================================================================================
# Ensure email is set
#======================================================================================================================

if [ -z "${LETS_ENCRYPT_EMAIL}" ] ; then
    echo " - LETS_ENCRYPT_EMAIL must be set before requesting SSL certificates."
    exit 1
fi


#======================================================================================================================
# Define directories
#======================================================================================================================

SSL=/ssl
SSL_CERTS=${SSL}/certs
SSL_CONF=${SSL}/conf
NGINX_SITES=/sites

[[ ! -d ${SSL_CERTS} ]] && mkdir ${SSL_CERTS}
[[ ! -d ${SSL_CONF} ]] && mkdir ${SSL_CONF}


#======================================================================================================================
# Create arrays and include configuration
#======================================================================================================================

SSL_CONF_SITES=${SSL_CONF}/sites.sh
if [ ! -f ${SSL_CONF_SITES} ] ; then
    echo " - you must create ${SSL_CONF_SITES} - see ssl-conf-sites-sample.sh."
    exit 1
fi

declare -A DOMAINS
declare -A ALIASES

source ${SSL_CONF_SITES}


#======================================================================================================================
# Check whether or not domains have been registered
#======================================================================================================================

if [ "${#DOMAINS[@]}" = "0" ] ; then
    echo " - no domains have been registered for SSL."
    exit 1
fi


#======================================================================================================================
# Setup Nginx and SSL for each primary domain
#======================================================================================================================

source /etc/functions/replace.sh
source /etc/functions/join.sh

setup_nginx () {

    DOMAIN=${1}
    ALIASES=${2}

    touch ${NGINX_SITES}/${DOMAIN}

}

setup_ssl () {

    DOMAIN=${1}
    ALIASES=${2}

    # setup domain
    getssl -w ${SSL_CERTS} -d -c ${DOMAIN}

    # set default values
    FILE=${SSL_CERTS}/${DOMAIN}/getssl.cfg
    CA=[[ "${LETS_ENCRYPT_LIVE}" = "1" ]] && "https://acme-v02.api.letsencrypt.org" || "https://acme-staging-v02.api.letsencrypt.org"
    SANS=join_by , ${ALIASES}
    ACL="'/var/www/.well-known/acme-challenge' "%.0s $(seq 0 ${#ALIASES[@]}) ${FILE}

    # replace config values with defaults
    replace "CA" ${CA} ${FILE}
    replace "SANS" ${SANS} ${FILE}
    replace "ACL" "(${ACL})" ${FILE}
    replace "DOMAIN_CERT_LOCATION" "${SSL_CERTS}/${DOMAIN}.crt" ${FILE}
    replace "DOMAIN_KEY_LOCATION" "${SSL_CERTS}/${DOMAIN}.key" ${FILE}
    replace "RELOAD_CMD" "service nginx reload" ${FILE}
    replace "SERVER_TYPE" "https" ${FILE}

}

echo " - creating configuration..."
for D in "${!DOMAINS[@]}" ; do
    echo " - domain ${D}..."
    A=${ALIASES[${D}]}
    [ ! -f ${NGINX_SITES}/${DOMAIN}] && setup_nginx ${D} ${A}
    [ ! -d ${SSL_CERTS}/${DOMAIN} ] && setup_ssl ${D} ${A}
done
echo " - done."
